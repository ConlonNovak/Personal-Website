{
  "title": "Labyrinthine", 
  "tagline": "A 2.5D Raycasting Engine and Maze-Exploration Game", 
  "type": "Term Project", 
  "year": "2016", 
  "desc": "Labyrinthine is a ray-casting game and engine that takes a 2D coordinate lists and texture files and turns them into 3D environments by blitting vertical slices of those textures at different sizes on the screen, creating the illusion of a 3D environment. These distances are calculated by rays are “cast” from the virtual camera that return the location and distance of the first object they encounter at every angle within the player’s field of view. The mazes are recursively generated using a wall adding algorithm, where a level is first generated as a chamber where random rows and columns of walls are then added. All walls are placed with doorways (that can’t be overwritten by future walls) carved through them in order to allow the player to navigate the maze, meaning that the algorithm can be called recursively to an arbitrary depth, limited only by the size of the original chamber that calls it. These mazes can be solved from any two points because of the nature of the figure – the interior of the shape is one continuous space without pockets or entrapments because of the use of the three hallways through the dividing walls.", 
  "time_spent":"three weeks", 
  "client": "15-112 Fundamentals of Programming", 
  "collaborators":null, 
  "skills":[
            {"name":"Game Development", "type":"experience"},
            {"name":"Python"},
            {"name":"PyGame"},
            {"name":"2.5D Raycasting"}
           ], 
  "images":null,
  "links":[
            {"name":"Devpost", "link":"https://devpost.com/software/labyrinthine"},
            {"name":"Github", "link":"https://github.com/ConlonNovak/Labyrinthine"}
          ],
  "awards":[
            {"award":"15-122 F16 Term Project Showcase: Featured Term Project"}
           ]
}